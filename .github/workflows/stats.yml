name: Get Stats

on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  workflow_dispatch:
    inputs:
      month:
        description: "Which month do you require data for?"
        required: false
        default: ""
      year:
        description: "Which year do you require data for?"
        required: false
        default: ""
  
  schedule:
    - cron: "0 0 2 * *"
  # Delay as sometimes the data isn't ready when it runs on the first.
  # https://crontab.guru/#0_0_1_*_*

env:
  FILE: "src/data/stats.json"

jobs:
  get-stats:
    runs-on: ubuntu-latest
    # permissions:
    #   id-token: write
    #   contents: write
    #   pull-requests: write
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Get Month
        run: |
          if [[ "${{ github.event.inputs.month }}" != "" ]]
          then
            month=${{ github.event.inputs.month }}
            echo $month
            year=${{ github.event.inputs.year }}
            echo $year
          elif [[ "${{ github.event.inputs.year }}" != "" ]]
          then
            month=${{ github.event.inputs.month }}
            echo $month
            year=${{ github.event.inputs.year }}
            echo $year
          else
            month=$(date +%m)
            echo $month
            month=$(expr $(date +%m) - 1)
            echo $month   
            month=$(LC_NUMERIC="en_US.UTF-8" printf "%02d" $month)
            echo $month
            
            year=$(date +%Y)
            echo $year
          fi
          echo "MONTH=$(echo $month)" >> $GITHUB_ENV
          echo "::set-output name=month::${{ env.MONTH }}"
          echo "YEAR=$(echo $year)" >> $GITHUB_ENV
          echo "::set-output name=year::${{ env.YEAR }}"

      - name: Get Stats for Month
        run: curl "https://ststaticprodosciwebz2vmu.blob.core.windows.net/data/osci-ranking/monthly/${{ env.YEAR }}/${{ env.MONTH }}.json" | jq '.data' | jq -c '.[] | select( .company == "Opencast Software")' >> ${{ env.FILE }}

      - name: Setup Git Config
        if: ${{ github.event.inputs.month }} != "" }}
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      
      - name: Create a new branch, add the file and push
        # with:
        #   github_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout -b "stats/$MONTH"
          git add ${{ env.FILE }}
          git commit -m "âœš Add Data for $MONTH"
          git push --set-upstream origin "stats/$MONTH"

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const { MONTH } = process.env
            const { YEAR } = process.env
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: `Added data for month ${MONTH}, year ${YEAR}`,
              owner,
              repo,
              head: `stats/${MONTH}`,
              base: 'main',
              body: [
                `Added data for month ${MONTH}, year ${YEAR}`,
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['data']
            });
